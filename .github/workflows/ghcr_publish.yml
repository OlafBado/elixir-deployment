name: GHCR publish

on:
  workflow_run:
    workflows: ["Elixir CI"]
    branches: [main, staging]
    types:
      - completed

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build_and_push_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  run_deployment_script_on_vps:
    runs-on: ubuntu-22.04
    needs: build_and_push_image
    env:
      BRANCH: ${{ github.ref_name }}
    steps:
      - name: Connect to VPS and execute deployment script
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.BACKOFFICE_HOST }}
          username: ${{ secrets.BACKOFFICE_USER }}
          key: ${{ secrets.BACKOFFICE_SSH_KEY }}
          passphrase: ${{ secrets.BACKOFFICE_PASSPHRASE }}
          script: |
            export CR_PAT=${{ secrets.GITHUB_TOKEN}}
            echo $CR_PAT | docker login ghcr.io -u ${{ secrets.GITHUB_USER }} --password-stdin
            sudo docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
            source ~/backoffice/${{ github.ref_name }}/.env
            docker compose -f ~/backoffice/${{ github.ref_name }}/docker-compose.${{ github.ref_name }}.yml down
            docker compose -f ~/backoffice/${{ github.ref_name }}/docker-compose.${{ github.ref_name }}.yml up -d
